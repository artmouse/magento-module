<?xml version="1.0" encoding="UTF-8"?>
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AmDefCreateBundleProductTest" extends="AdminCreateAndEditBundleProductSettingsTest">
        <annotations>
            <features value="Bundle Product"/>
            <stories value="Create Bundle Product via Admin"/>
            <title value="Create Bundle Product and Assert on Product Grid"/>
            <description value="Create Bundle Product and Assert on Product Grid by Name"/>
            <severity value="CRITICAL"/>
            <testCaseId value="AmDef-09"/>
            <group value="Amasty"/>
            <group value="BundleProduct"/>
            <group value="AmDef"/>
            <group value="AmDefCE"/>
            <group value="AmDefAdmin"/>
        </annotations>

        <before>
            <remove keyForRemoval="createSimpleProduct"/>
            <actionGroup ref="AdminLoginActionGroup" before="createWebsite" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminCreateWebsiteActionGroup" stepKey="createWebsite">
                <argument name="newWebsiteName" value="{{customWebsite.name}}"/>
                <argument name="websiteCode" value="{{customWebsite.code}}"/>
            </actionGroup>
            <createData entity="_defaultCategory" after="createWebsite" stepKey="createCategory"/>
            <createData entity="SimpleProductByWatchClamber" after="createCategory" stepKey="createFirstProd">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="SimpleProductByWayfarerMessenger" before="createFirstProd" stepKey="createSecondProd">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
        </before>
        <after>
            <remove keyForRemoval="deleteSimpleProduct"/>
            <deleteData createDataKey="createCategory" after="deleteWebsite" stepKey="deleteCategory"/>
            <deleteData createDataKey="createFirstProd" after="deleteCategory" stepKey="deleteFirstProd"/>
            <deleteData createDataKey="createSecondProd" after="deleteFirstProd" stepKey="deleteSecondProd"/>
            <actionGroup ref="AdminDeleteCreatedProductActionGroup" after="deleteSecondProd" stepKey="deleteBundle">
                <argument name="product" value="bundleProductPrice58"/>
            </actionGroup>
            <actionGroup ref="AdminClearProductGridActionGroup" after="deleteBundle" stepKey="clearFilter"/>
        </after>

        <remove keyForRemoval="searchForSimpleProduct"/>
        <remove keyForRemoval="deleteProduct"/>
        <actionGroup ref="FillMainBundleProductFormActionGroup" stepKey="fillMainProductFields">
            <argument name="product" value="bundleProductPrice58"/>
        </actionGroup>
        <actionGroup ref="AddBundleOptionWithOneProductActionGroup" stepKey="addBundleOption">
            <argument name="x" value="{{bundleProductPrice58.bundleFirstOptionPosition}}"/>
            <argument name="n" value="{{bundleProductPrice58.bundleFirstOptionByCount}}"/>
            <argument name="prodOneSku" value="$$createFirstProd.sku$$"/>
            <argument name="prodTwoSku" value="$$createSecondProd.sku$$"/>
            <argument name="optionTitle" value="{{radioButtonOption.title}}"/>
            <argument name="inputType" value="{{radioButtonOption.type}}"/>
        </actionGroup>
        <actionGroup ref="AdminAssignProductInWebsiteActionGroup" stepKey="selectProductInWebsites">
            <argument name="website" value="{{customWebsite.name}}"/>
        </actionGroup>
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openStorefrontProductPage">
            <argument name="productUrl" value="{{bundleProductPrice58.urlKey}}"/>
        </actionGroup>
        <actionGroup ref="StorefrontAddBundleProductFromProductToCartActionGroup" stepKey="addProductToCart">
            <argument name="productName" value="{{bundleProductPrice58.name}}"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertProdGiftFieldsOnCartActionGroup" stepKey="assertGiftMessageFieldsArePresent"/>
        <actionGroup ref="AdminFindAndOpenCreatedProductActionGroup" stepKey="openEditProduct">
            <argument name="product" value="bundleProductPrice58"/>
        </actionGroup>
        <actionGroup ref="AssertProductIsAssignedToWebsiteActionGroup" stepKey="seeCustomWebsiteIsChecked">
            <argument name="website" value="{{customWebsite.name}}"/>
        </actionGroup>
        <actionGroup ref="AdminUnassignProductInWebsiteActionGroup" stepKey="uncheckProductInWebsites">
            <argument name="website" value="{{customWebsite.name}}"/>
        </actionGroup>
        <actionGroup ref="AdminClearProductGridActionGroup" stepKey="clearFilterAfterAssertProductOptionsOnGrid"/>
    </test>
</tests>

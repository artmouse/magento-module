<?xml version="1.0" encoding="UTF-8"?>
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AmDefCreateOrderOnAdminAreaTest" extends="AdminCreateCreditMemoPartialRefundTest">
        <annotations>
            <features value="Create Order"/>
            <stories value="Create Order via Admin"/>
            <title value="Check Create Order on the Admin Area"/>
            <description value="Check Create Order on the Admin Area with Simple Product"/>
            <severity value="CRITICAL"/>
            <testCaseId value="AmDef-16"/>
            <group value="Amasty"/>
            <group value="AdminCheckout"/>
            <group value="AmDef"/>
            <group value="AmDefCE"/>
            <group value="AmDefAdmin"/>
        </annotations>

        <before>
            <!-- Create Data for Test -->
            <createData entity="CommonCustomerArizona" stepKey="createCustomer"/>
            <actionGroup ref="AdminLoginActionGroup" after="createProduct" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminDisableRuleIfExistActionGroup" stepKey="disableFirstCartRuleIfExist">
                <argument name="cartRuleName" value="amDefCartRulesNameForDisable.firstRule"/>
            </actionGroup>
            <actionGroup ref="AdminDisableRuleIfExistActionGroup" stepKey="disableSecondCartRuleIfExist">
                <argument name="cartRuleName" value="amDefCartRulesNameForDisable.secondRule"/>
            </actionGroup>
            <magentoCLI command="config:set {{EnableFlatRateConfigData.path}} {{EnableFlatRateConfigData.value}}"
                        stepKey="enableFlatRate"/>
        </before>


        <remove keyForRemoval="onAccountPage"/>
        <remove keyForRemoval="waitForPage"/>
        <remove keyForRemoval="scrollToResent"/>
        <remove keyForRemoval="clickOnOrder"/>
        <remove keyForRemoval="waitForViewOrder"/>
        <actionGroup ref="FillOrderCustomerInformationActionGroup" stepKey="fillCustomerInfo">
            <argument name="customer" value="$createCustomer$"/>
            <argument name="address" value="Common_Address_AZ"/>
        </actionGroup>
        <grabTextFrom selector="|Order # (\d+)|" after="seeInvoiceCreateSuccess" stepKey="number"/>
        <actionGroup ref="StorefrontOpenOrderFromMyAccountByIdActionGroup" after="loginAsCustomer"
                     stepKey="openOrderOnCustomerAccount">
            <argument name="orderId" value="{$number}"/>
        </actionGroup>
    </test>
</tests>

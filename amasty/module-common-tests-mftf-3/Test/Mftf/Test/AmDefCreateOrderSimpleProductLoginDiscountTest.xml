<?xml version="1.0" encoding="UTF-8"?>
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AmDefCreateOrderSimpleProductLoginDiscountTest">
        <annotations>
            <features value="Create Order"/>
            <stories value="Create Order with Simple Product"/>
            <title value="Check Create Order with Simple Product and Discount"/>
            <description
                value="Check Create Order with Configurable Product and Discount as Login Customer on Storefront"/>
            <severity value="CRITICAL"/>
            <testCaseId value="AmDef-17"/>
            <group value="Amasty"/>
            <group value="Checkout"/>
            <group value="AmDef"/>
            <group value="AmDefCE"/>
            <group value="AmDefStorefront"/>
        </annotations>

        <before>
            <!-- Create Data for Test -->
            <magentoCLI command="config:set {{EnableFlatRateConfigData.path}} {{EnableFlatRateConfigData.value}}"
                        stepKey="enableFlatRate"/>
            <magentoCLI command="config:set {{EnableCashOnDeliveryPaymentMethod.path}} {{EnableCashOnDeliveryPaymentMethod.value}}"
                        stepKey="cashOnDeliveryPaymentMethod"/>
            <createData entity="CommonCustomerArizona" stepKey="createCustomer"/>
            <createData entity="taxRateForArizona" stepKey="createTaxRate"/>
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="SimpleProductByBagImpulseDuffleQtyOne" stepKey="createFirstProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminCreateTaxRuleActionGroup" stepKey="createTaxRule">
                <argument name="taxRule" value="taxRuleWithArizona"/>
                <argument name="taxRate" value="$$createTaxRate$$"/>
            </actionGroup>
            <actionGroup ref="AdminConfigurationSettingsForCalculationTaxActionGroup" stepKey="configurationSettingTax">
                <argument name="calculationTax" value="taxExcludeCatalogAndShipping"/>
            </actionGroup>
            <actionGroup ref="AdminCreateCartPriceRuleActionGroup" stepKey="createCartPriceRule">
                <argument name="ruleName" value="defaultCartPriceRuleDiscountPercent10"/>
            </actionGroup>
        </before>
        <after>
            <!-- Delete Created Data After Test -->
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createFirstProduct" stepKey="deleteFirstProduct"/>
            <actionGroup ref="AdminDeleteTaxRule" stepKey="deleteTaxRule">
                <argument name="taxRuleCode" value="{{taxRuleWithArizona.code}}"/>
            </actionGroup>
            <deleteData createDataKey="createTaxRate" stepKey="deleteTaxRate"/>
            <actionGroup ref="AdminDefaultConfigurationSettingCalculationTaxActionGroup" stepKey="returnDefaultTaxSetting"/>
            <magentoCLI command="config:set {{DisableCashOnDeliveryPaymentMethod.path}} {{DisableCashOnDeliveryPaymentMethod.value}}"
                        stepKey="defaultCashOnDelivery"/>
            <actionGroup ref="DeleteCartPriceRuleByName" stepKey="deleteCartPriceRule">
                <argument name="ruleName" value="{{defaultCartPriceRuleDiscountPercent10.name}}"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!-- Login to Storefront and Add Product to Cart -->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginAsCustomer">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontOpenCategoryPageActionGroup" stepKey="openStorefrontPage">
            <argument name="category" value="$$createCategory$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontAddProductToCartFromCategoryActionGroup" stepKey="addProductToCart">
            <argument name="productName" value="$$createFirstProduct.name$$"/>
        </actionGroup>
        <!-- Fill Shipping Address, Assert Totals on Checkout and Create Order -->
        <actionGroup ref="StorefrontCreateOrderAsCustomerOnCheckoutShippingPageActionGroup" stepKey="fillShippingCheckoutPage">
            <argument name="shippingMethodsOnCheckout" value="FlatRateMethod"/>
        </actionGroup>
        <actionGroup ref="StorefrontCheckDiscountAmountOnCheckoutActionGroup" stepKey="assertDiscountOnCheckoutTotals">
            <argument name="discountAmount" value="amDefOrderSimpleLoginDiscount.discountAmount"/>
        </actionGroup>
        <actionGroup ref="VerifyCheckoutPaymentOrderSummaryActionGroup" stepKey="assertCheckoutSummary">
            <argument name="orderSummarySubTotal" value="{{amDefOrderSimpleLoginDiscount.subtotal}}"/>
            <argument name="orderSummaryShippingTotal" value="{{amDefOrderSimpleLoginDiscount.shippingPrice}}"/>
            <argument name="orderSummaryTotal" value="{{amDefOrderSimpleLoginDiscount.orderTotal}}"/>
        </actionGroup>
        <actionGroup ref="StorefrontCreateOrderGrabMainNumberActionGroup" stepKey="createOrder" >
            <argument name="paymentMethods" value="paymentCashOnDeliveryPayment"/>
        </actionGroup>
        <!-- Create Invoice, Ship and Credit Memo -->
        <actionGroup ref="AdminOpenOrderOnIdActionGroup" stepKey="openOrder">
            <argument name="orderId" value="{$grabOrderNumberCreateOrder}"/>
        </actionGroup>
        <actionGroup ref="AdminCreateInvoiceAndShipmentActionGroup" stepKey="createInvoiceAndShipment"/>
        <actionGroup ref="AssertAdminProductStockStatusActionGroup" stepKey="checkProductStockStatus">
            <argument name="productId" value="$$createFirstProduct.id$$"/>
            <argument name="stockStatus" value="{{stockStatus.outStock}}"/>
        </actionGroup>
    </test>
</tests>
